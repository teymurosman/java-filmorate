DROP TABLE IF EXISTS genres, mpa_rating, films, film_genre, users, friendships, likes;

CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS  mpa_rating (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) NOT NULL,
    description varchar(200) NOT NULL,
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    mpa_id INTEGER NOT NULL REFERENCES mpa_rating(mpa_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    genre_id INTEGER REFERENCES genres(genre_id),
    film_id BIGINT REFERENCES films(film_id),
    PRIMARY KEY(genre_id, film_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(100) NOT NULL UNIQUE,
    login varchar(50) NOT NULL,
    name varchar(50) NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS friendships (
    user_id BIGINT REFERENCES users(user_id),
    friend_id BIGINT REFERENCES users(user_id),
    is_confirmed BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY(user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT REFERENCES films(film_id),
    user_id BIGINT REFERENCES users(user_id),
    PRIMARY KEY(film_id, user_id)
);